/*
 * This file is generated by jOOQ.
*/
package uni.akilis.jooq.generated.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import uni.akilis.jooq.generated.Keys;
import uni.akilis.jooq.generated.Pldb;
import uni.akilis.jooq.generated.tables.records.PlparkingsensorRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Plparkingsensor extends TableImpl<PlparkingsensorRecord> {

    private static final long serialVersionUID = 2121209600;

    /**
     * The reference instance of <code>pldb.plparkingsensor</code>
     */
    public static final Plparkingsensor PLPARKINGSENSOR = new Plparkingsensor();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PlparkingsensorRecord> getRecordType() {
        return PlparkingsensorRecord.class;
    }

    /**
     * The column <code>pldb.plparkingsensor.sId</code>. 传感器ID，自增长
     */
    public final TableField<PlparkingsensorRecord, Integer> SID = createField("sId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "传感器ID，自增长");

    /**
     * The column <code>pldb.plparkingsensor.nodeNumber</code>. 传感器的节点ip
     */
    public final TableField<PlparkingsensorRecord, String> NODENUMBER = createField("nodeNumber", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "传感器的节点ip");

    /**
     * The column <code>pldb.plparkingsensor.IP</code>. 传感器节点下的IP
     */
    public final TableField<PlparkingsensorRecord, String> IP = createField("IP", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "传感器节点下的IP");

    /**
     * Create a <code>pldb.plparkingsensor</code> table reference
     */
    public Plparkingsensor() {
        this("plparkingsensor", null);
    }

    /**
     * Create an aliased <code>pldb.plparkingsensor</code> table reference
     */
    public Plparkingsensor(String alias) {
        this(alias, PLPARKINGSENSOR);
    }

    private Plparkingsensor(String alias, Table<PlparkingsensorRecord> aliased) {
        this(alias, aliased, null);
    }

    private Plparkingsensor(String alias, Table<PlparkingsensorRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Pldb.PLDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PlparkingsensorRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PLPARKINGSENSOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PlparkingsensorRecord> getPrimaryKey() {
        return Keys.KEY_PLPARKINGSENSOR_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PlparkingsensorRecord>> getKeys() {
        return Arrays.<UniqueKey<PlparkingsensorRecord>>asList(Keys.KEY_PLPARKINGSENSOR_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Plparkingsensor as(String alias) {
        return new Plparkingsensor(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Plparkingsensor rename(String name) {
        return new Plparkingsensor(name, null);
    }
}
