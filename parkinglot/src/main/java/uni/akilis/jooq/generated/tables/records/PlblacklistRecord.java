/*
 * This file is generated by jOOQ.
*/
package uni.akilis.jooq.generated.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import uni.akilis.jooq.generated.tables.Plblacklist;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlblacklistRecord extends UpdatableRecordImpl<PlblacklistRecord> implements Record4<Integer, String, String, String> {

    private static final long serialVersionUID = 1647266479;

    /**
     * Setter for <code>pldb.plblacklist.blId</code>.
     */
    public void setBlid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>pldb.plblacklist.blId</code>.
     */
    public Integer getBlid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>pldb.plblacklist.carLicence</code>. 车牌号
     */
    public void setCarlicence(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>pldb.plblacklist.carLicence</code>. 车牌号
     */
    public String getCarlicence() {
        return (String) get(1);
    }

    /**
     * Setter for <code>pldb.plblacklist.reason</code>. 原因
     */
    public void setReason(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>pldb.plblacklist.reason</code>. 原因
     */
    public String getReason() {
        return (String) get(2);
    }

    /**
     * Setter for <code>pldb.plblacklist.type</code>. 受限制的类别，比如欠费，超过有效期等
     */
    public void setType(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>pldb.plblacklist.type</code>. 受限制的类别，比如欠费，超过有效期等
     */
    public String getType() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Plblacklist.PLBLACKLIST.BLID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Plblacklist.PLBLACKLIST.CARLICENCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Plblacklist.PLBLACKLIST.REASON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Plblacklist.PLBLACKLIST.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getBlid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getCarlicence();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getReason();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlblacklistRecord value1(Integer value) {
        setBlid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlblacklistRecord value2(String value) {
        setCarlicence(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlblacklistRecord value3(String value) {
        setReason(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlblacklistRecord value4(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlblacklistRecord values(Integer value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlblacklistRecord
     */
    public PlblacklistRecord() {
        super(Plblacklist.PLBLACKLIST);
    }

    /**
     * Create a detached, initialised PlblacklistRecord
     */
    public PlblacklistRecord(Integer blid, String carlicence, String reason, String type) {
        super(Plblacklist.PLBLACKLIST);

        set(0, blid);
        set(1, carlicence);
        set(2, reason);
        set(3, type);
    }
}
