/*
 * This file is generated by jOOQ.
*/
package uni.akilis.jooq.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import uni.akilis.jooq.generated.Keys;
import uni.akilis.jooq.generated.Pldb;
import uni.akilis.jooq.generated.tables.records.PlmalfunctionrecordRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Plmalfunctionrecord extends TableImpl<PlmalfunctionrecordRecord> {

    private static final long serialVersionUID = -770790868;

    /**
     * The reference instance of <code>pldb.plmalfunctionrecord</code>
     */
    public static final Plmalfunctionrecord PLMALFUNCTIONRECORD = new Plmalfunctionrecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PlmalfunctionrecordRecord> getRecordType() {
        return PlmalfunctionrecordRecord.class;
    }

    /**
     * The column <code>pldb.plmalfunctionrecord.id</code>.
     */
    public final TableField<PlmalfunctionrecordRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>pldb.plmalfunctionrecord.time</code>. 故障出现的时间
     */
    public final TableField<PlmalfunctionrecordRecord, Timestamp> TIME = createField("time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "故障出现的时间");

    /**
     * The column <code>pldb.plmalfunctionrecord.type</code>. 故障类型，如传感器、相机等出现故障的设备名称
     */
    public final TableField<PlmalfunctionrecordRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "故障类型，如传感器、相机等出现故障的设备名称");

    /**
     * The column <code>pldb.plmalfunctionrecord.description</code>. 故障的简单描述
     */
    public final TableField<PlmalfunctionrecordRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "故障的简单描述");

    /**
     * Create a <code>pldb.plmalfunctionrecord</code> table reference
     */
    public Plmalfunctionrecord() {
        this("plmalfunctionrecord", null);
    }

    /**
     * Create an aliased <code>pldb.plmalfunctionrecord</code> table reference
     */
    public Plmalfunctionrecord(String alias) {
        this(alias, PLMALFUNCTIONRECORD);
    }

    private Plmalfunctionrecord(String alias, Table<PlmalfunctionrecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private Plmalfunctionrecord(String alias, Table<PlmalfunctionrecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Pldb.PLDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PlmalfunctionrecordRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PLMALFUNCTIONRECORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PlmalfunctionrecordRecord> getPrimaryKey() {
        return Keys.KEY_PLMALFUNCTIONRECORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PlmalfunctionrecordRecord>> getKeys() {
        return Arrays.<UniqueKey<PlmalfunctionrecordRecord>>asList(Keys.KEY_PLMALFUNCTIONRECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Plmalfunctionrecord as(String alias) {
        return new Plmalfunctionrecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Plmalfunctionrecord rename(String name) {
        return new Plmalfunctionrecord(name, null);
    }
}
