/*
 * This file is generated by jOOQ.
*/
package uni.akilis.jooq.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import uni.akilis.jooq.generated.Keys;
import uni.akilis.jooq.generated.Pldb;
import uni.akilis.jooq.generated.tables.records.PlparkingrecordRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Plparkingrecord extends TableImpl<PlparkingrecordRecord> {

    private static final long serialVersionUID = 701071754;

    /**
     * The reference instance of <code>pldb.plparkingrecord</code>
     */
    public static final Plparkingrecord PLPARKINGRECORD = new Plparkingrecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PlparkingrecordRecord> getRecordType() {
        return PlparkingrecordRecord.class;
    }

    /**
     * The column <code>pldb.plparkingrecord.id</code>.
     */
    public final TableField<PlparkingrecordRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>pldb.plparkingrecord.carLicense</code>. 车牌号码
     */
    public final TableField<PlparkingrecordRecord, String> CARLICENSE = createField("carLicense", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "车牌号码");

    /**
     * The column <code>pldb.plparkingrecord.carType</code>. 车辆类型

     */
    public final TableField<PlparkingrecordRecord, String> CARTYPE = createField("carType", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "车辆类型\n");

    /**
     * The column <code>pldb.plparkingrecord.carColor</code>. 车辆颜色
     */
    public final TableField<PlparkingrecordRecord, String> CARCOLOR = createField("carColor", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "车辆颜色");

    /**
     * The column <code>pldb.plparkingrecord.iTime</code>. 车辆的入场时间
     */
    public final TableField<PlparkingrecordRecord, Timestamp> ITIME = createField("iTime", org.jooq.impl.SQLDataType.TIMESTAMP, this, "车辆的入场时间");

    /**
     * The column <code>pldb.plparkingrecord.oTime</code>. 车辆的出场时间
     */
    public final TableField<PlparkingrecordRecord, Timestamp> OTIME = createField("oTime", org.jooq.impl.SQLDataType.TIMESTAMP, this, "车辆的出场时间");

    /**
     * The column <code>pldb.plparkingrecord.code</code>. 编码
     */
    public final TableField<PlparkingrecordRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "编码");

    /**
     * The column <code>pldb.plparkingrecord.cost</code>. 收费金额
     */
    public final TableField<PlparkingrecordRecord, Double> COST = createField("cost", org.jooq.impl.SQLDataType.DOUBLE, this, "收费金额");

    /**
     * The column <code>pldb.plparkingrecord.payWay</code>. 支付方式
     */
    public final TableField<PlparkingrecordRecord, String> PAYWAY = createField("payWay", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "支付方式");

    /**
     * Create a <code>pldb.plparkingrecord</code> table reference
     */
    public Plparkingrecord() {
        this("plparkingrecord", null);
    }

    /**
     * Create an aliased <code>pldb.plparkingrecord</code> table reference
     */
    public Plparkingrecord(String alias) {
        this(alias, PLPARKINGRECORD);
    }

    private Plparkingrecord(String alias, Table<PlparkingrecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private Plparkingrecord(String alias, Table<PlparkingrecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Pldb.PLDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PlparkingrecordRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PLPARKINGRECORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PlparkingrecordRecord> getPrimaryKey() {
        return Keys.KEY_PLPARKINGRECORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PlparkingrecordRecord>> getKeys() {
        return Arrays.<UniqueKey<PlparkingrecordRecord>>asList(Keys.KEY_PLPARKINGRECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Plparkingrecord as(String alias) {
        return new Plparkingrecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Plparkingrecord rename(String name) {
        return new Plparkingrecord(name, null);
    }
}
