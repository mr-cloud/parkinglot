/*
 * This file is generated by jOOQ.
*/
package uni.akilis.jooq.generated.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import uni.akilis.jooq.generated.tables.Plparkingspace;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlparkingspaceRecord extends UpdatableRecordImpl<PlparkingspaceRecord> implements Record5<Integer, String, String, Integer, Long> {

    private static final long serialVersionUID = -2103346036;

    /**
     * Setter for <code>pldb.plparkingspace.pSpaceId</code>. 车位编号，四位整形，前两位表示楼层号，后两位表示对应楼层的车位号，如0100,表示第一层的00号位
     */
    public void setPspaceid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>pldb.plparkingspace.pSpaceId</code>. 车位编号，四位整形，前两位表示楼层号，后两位表示对应楼层的车位号，如0100,表示第一层的00号位
     */
    public Integer getPspaceid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>pldb.plparkingspace.resStatus</code>. 是否被预约，true表示被预约用户预约，false表示未被预约

     */
    public void setResstatus(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>pldb.plparkingspace.resStatus</code>. 是否被预约，true表示被预约用户预约，false表示未被预约

     */
    public String getResstatus() {
        return (String) get(1);
    }

    /**
     * Setter for <code>pldb.plparkingspace.carType</code>. 该车位可停的车辆类型
     */
    public void setCartype(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>pldb.plparkingspace.carType</code>. 该车位可停的车辆类型
     */
    public String getCartype() {
        return (String) get(2);
    }

    /**
     * Setter for <code>pldb.plparkingspace.ps_sId</code>. 车位对应的传感器ID，每个车位都会有一个相应的传感器，检测该车位有无车辆
     */
    public void setPsSid(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>pldb.plparkingspace.ps_sId</code>. 车位对应的传感器ID，每个车位都会有一个相应的传感器，检测该车位有无车辆
     */
    public Integer getPsSid() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>pldb.plparkingspace.pc_tId</code>. 车位对应的车辆编号，无车时为null
     */
    public void setPcTid(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>pldb.plparkingspace.pc_tId</code>. 车位对应的车辆编号，无车时为null
     */
    public Long getPcTid() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, String, Integer, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, String, Integer, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Plparkingspace.PLPARKINGSPACE.PSPACEID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Plparkingspace.PLPARKINGSPACE.RESSTATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Plparkingspace.PLPARKINGSPACE.CARTYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Plparkingspace.PLPARKINGSPACE.PS_SID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field5() {
        return Plparkingspace.PLPARKINGSPACE.PC_TID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getPspaceid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getResstatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getCartype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getPsSid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value5() {
        return getPcTid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlparkingspaceRecord value1(Integer value) {
        setPspaceid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlparkingspaceRecord value2(String value) {
        setResstatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlparkingspaceRecord value3(String value) {
        setCartype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlparkingspaceRecord value4(Integer value) {
        setPsSid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlparkingspaceRecord value5(Long value) {
        setPcTid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlparkingspaceRecord values(Integer value1, String value2, String value3, Integer value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlparkingspaceRecord
     */
    public PlparkingspaceRecord() {
        super(Plparkingspace.PLPARKINGSPACE);
    }

    /**
     * Create a detached, initialised PlparkingspaceRecord
     */
    public PlparkingspaceRecord(Integer pspaceid, String resstatus, String cartype, Integer psSid, Long pcTid) {
        super(Plparkingspace.PLPARKINGSPACE);

        set(0, pspaceid);
        set(1, resstatus);
        set(2, cartype);
        set(3, psSid);
        set(4, pcTid);
    }
}
