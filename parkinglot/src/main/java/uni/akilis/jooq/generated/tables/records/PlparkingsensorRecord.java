/*
 * This file is generated by jOOQ.
*/
package uni.akilis.jooq.generated.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import uni.akilis.jooq.generated.tables.Plparkingsensor;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlparkingsensorRecord extends UpdatableRecordImpl<PlparkingsensorRecord> implements Record3<Integer, String, String> {

    private static final long serialVersionUID = 190928063;

    /**
     * Setter for <code>pldb.plparkingsensor.sId</code>. 传感器ID，自增长
     */
    public void setSid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>pldb.plparkingsensor.sId</code>. 传感器ID，自增长
     */
    public Integer getSid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>pldb.plparkingsensor.nodeNumber</code>. 传感器的节点ip
     */
    public void setNodenumber(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>pldb.plparkingsensor.nodeNumber</code>. 传感器的节点ip
     */
    public String getNodenumber() {
        return (String) get(1);
    }

    /**
     * Setter for <code>pldb.plparkingsensor.IP</code>. 传感器节点下的IP
     */
    public void setIp(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>pldb.plparkingsensor.IP</code>. 传感器节点下的IP
     */
    public String getIp() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Plparkingsensor.PLPARKINGSENSOR.SID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Plparkingsensor.PLPARKINGSENSOR.NODENUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Plparkingsensor.PLPARKINGSENSOR.IP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getSid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getNodenumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getIp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlparkingsensorRecord value1(Integer value) {
        setSid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlparkingsensorRecord value2(String value) {
        setNodenumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlparkingsensorRecord value3(String value) {
        setIp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlparkingsensorRecord values(Integer value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlparkingsensorRecord
     */
    public PlparkingsensorRecord() {
        super(Plparkingsensor.PLPARKINGSENSOR);
    }

    /**
     * Create a detached, initialised PlparkingsensorRecord
     */
    public PlparkingsensorRecord(Integer sid, String nodenumber, String ip) {
        super(Plparkingsensor.PLPARKINGSENSOR);

        set(0, sid);
        set(1, nodenumber);
        set(2, ip);
    }
}
